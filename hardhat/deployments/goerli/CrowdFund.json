{
  "address": "0xDa537C498708d8708fEdA5D875393c4109A4B432",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "priceFeeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Deadline",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Ended",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Required",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum CrowdFund.Category",
          "name": "category",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "CreatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DonatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "donations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "PaidOutCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "RefundCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "TimerStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTarget",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeadline",
          "type": "uint256"
        }
      ],
      "name": "UpdatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "WithdrawCampaign",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CrowdFund.Category",
          "name": "_category",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "donators",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "donations",
              "type": "uint256[]"
            },
            {
              "internalType": "enum CrowdFund.CampaignStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "enum CrowdFund.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "refunded",
              "type": "bool"
            }
          ],
          "internalType": "struct CrowdFund.Campaign",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaigns",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "donators",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "donations",
              "type": "uint256[]"
            },
            {
              "internalType": "enum CrowdFund.CampaignStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "enum CrowdFund.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "refunded",
              "type": "bool"
            }
          ],
          "internalType": "struct CrowdFund.Campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getDonators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRefundStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRemainingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getStatus",
      "outputs": [
        {
          "internalType": "enum CrowdFund.CampaignStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "refundCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_campaignExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_numberOfCampaigns",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTarget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcb053df37183cd0ac358c583de048c7191df950263bb72a55d6c89d230cf6b9c",
  "receipt": {
    "to": null,
    "from": "0x0E128580d848fB51849ab6564467A9BA79B4820c",
    "contractAddress": "0xDa537C498708d8708fEdA5D875393c4109A4B432",
    "transactionIndex": 38,
    "gasUsed": "3611705",
    "logsBloom": "0x
    "blockHash": "0xec70565209daf6d1377afc74db97ca6913c5edc06a40df5d9c31bab43d2b7c38",
    "transactionHash": "0xcb053df37183cd0ac358c583de048c7191df950263bb72a55d6c89d230cf6b9c",
    "logs": [],
    "blockNumber": 9104279,
    "cumulativeGasUsed": "13501775",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0E128580d848fB51849ab6564467A9BA79B4820c",
    10,
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 17,
  "solcInputHash": "60d32398d32a5ae8c8412c9074561fd2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceFeeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CrowdFund__Deadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__Ended\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__Required\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"CreatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DonatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"donations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PaidOutCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"RefundCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"TimerStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTarget\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"UpdatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"WithdrawCampaign\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"internalType\":\"struct CrowdFund.Campaign\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaigns\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"internalType\":\"struct CrowdFund.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getDonators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRefundStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"refundCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_campaignExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_numberOfCampaigns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFund.sol\":\"CrowdFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"contracts/CrowdFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\nimport \\\"../library/PriceConverter.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\nerror CrowdFund__Deadline();\\nerror CrowdFund__NotOwner();\\nerror CrowdFund__Claimed();\\nerror CrowdFund__Ended();\\nerror CrowdFund__Required();\\n\\ncontract CrowdFund is KeeperCompatibleInterface {\\n    address private immutable i_feeAccount;\\n    uint256 private i_feePercent;\\n    address private i_owner;\\n    CampaignStatus private campaignStatus;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    uint256 public s_numberOfCampaigns = 0;\\n\\n    enum CampaignStatus {\\n        OPEN,\\n        APPROVED,\\n        REVERTED,\\n        DELETED,\\n        PAID\\n    }\\n\\n    enum Category {\\n        CHARITY,\\n        TECH,\\n        WEB3,\\n        GAMES,\\n        EDUCATION\\n    }\\n\\n    struct Campaign {\\n        uint256 id;\\n        address owner;\\n        string title;\\n        string description;\\n        uint256 target;\\n        uint256 deadline;\\n        uint256 amountCollected;\\n        string image;\\n        address[] donators;\\n        uint256[] donations;\\n        CampaignStatus status;\\n        Category category;\\n        bool refunded;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert CrowdFund__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlyCampaignOwner(uint256 _id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (campaign.owner != msg.sender) revert CrowdFund__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlyOpenCampaign(uint _id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (campaign.status != CampaignStatus.OPEN)\\n            revert CrowdFund__Required();\\n        _;\\n    }\\n\\n    event CreatedCampaign(\\n        uint256 id,\\n        address indexed creator,\\n        Category category,\\n        uint256 target,\\n        uint256 deadline\\n    );\\n\\n    event CancelCampaign(uint256 id, address indexed creator, uint timestamp);\\n\\n    event DonatedCampaign(\\n        uint256 id,\\n        address indexed donator,\\n        uint value,\\n        uint timestamp\\n    );\\n\\n    event PaidOutCampaign(\\n        uint256 id,\\n        address indexed creator,\\n        uint256 donations,\\n        uint256 timestamp\\n    );\\n\\n    event TimerStarted(uint256 startTime, uint256 duration);\\n\\n    event WithdrawCampaign(uint id, address indexed creator);\\n\\n    event RefundCampaign(uint id, address indexed creator);\\n\\n    event UpdatedCampaign(uint256 id, uint256 newTarget, uint256 newDeadline);\\n\\n    mapping(uint256 => Campaign) private s_campaigns;\\n    mapping(uint256 => bool) public s_campaignExist;\\n\\n    constructor(\\n        address _feeAccount,\\n        uint256 _feePercent,\\n        address priceFeeAddress\\n    ) {\\n        i_feeAccount = _feeAccount;\\n        i_feePercent = _feePercent;\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeeAddress);\\n    }\\n\\n    function createCampaign(\\n        Category _category,\\n        string memory _title,\\n        string memory _description,\\n        uint256 _target,\\n        uint256 _deadline,\\n        string memory _image\\n    ) external returns (uint256) {\\n        if (_target < 0 ether) revert CrowdFund__Required();\\n        if (_deadline <= block.timestamp) revert CrowdFund__Required();\\n\\n        Campaign storage campaign = s_campaigns[s_numberOfCampaigns];\\n\\n        campaign.id = s_numberOfCampaigns;\\n        campaign.owner = msg.sender;\\n        campaign.title = _title;\\n        campaign.description = _description;\\n        campaign.target = _target;\\n        campaign.deadline = _deadline;\\n        campaign.amountCollected = 0;\\n        campaign.image = _image;\\n        campaign.donators = new address[](0);\\n        campaign.donations = new uint256[](0);\\n        campaign.category = _category;\\n\\n        campaign.status = CampaignStatus.OPEN;\\n\\n        s_campaignExist[campaign.id] = true;\\n\\n        s_numberOfCampaigns++;\\n\\n        emit CreatedCampaign(\\n            s_numberOfCampaigns,\\n            msg.sender,\\n            _category,\\n            _target,\\n            _deadline\\n        );\\n\\n        return s_numberOfCampaigns - 1;\\n    }\\n\\n    function donateToCampaign(\\n        uint256 _id\\n    ) external payable onlyOpenCampaign(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        uint amount = msg.value;\\n\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        campaign.donators.push(msg.sender);\\n        campaign.donations.push(amount);\\n        campaign.amountCollected += amount;\\n\\n        emit DonatedCampaign(_id, msg.sender, amount, block.timestamp);\\n\\n        if (campaign.amountCollected >= campaign.target) {\\n            campaign.status = CampaignStatus.APPROVED;\\n        } else {\\n            campaign.status = CampaignStatus.OPEN;\\n        }\\n    }\\n\\n    function cancelCampaign(\\n        uint256 _id\\n    ) external onlyCampaignOwner(_id) onlyOpenCampaign(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.owner != msg.sender) revert CrowdFund__NotOwner();\\n\\n        campaign.status = CampaignStatus.DELETED;\\n\\n        if (campaign.amountCollected > 0) {\\n            _refund(_id);\\n        }\\n\\n        emit CancelCampaign(_id, msg.sender, block.timestamp);\\n    }\\n\\n    function withdrawCampaign(\\n        uint256 _id\\n    ) external payable onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status != CampaignStatus.APPROVED &&\\n            campaign.status != CampaignStatus.REVERTED\\n        ) revert CrowdFund__Required();\\n\\n        if (msg.sender != campaign.owner) revert CrowdFund__NotOwner();\\n\\n        campaign.status = CampaignStatus.PAID;\\n\\n        _payOut(_id);\\n\\n        emit WithdrawCampaign(_id, msg.sender);\\n    }\\n\\n    function refundCampaign(uint _id) external onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status == CampaignStatus.REVERTED ||\\n            campaign.status == CampaignStatus.DELETED ||\\n            campaign.status == CampaignStatus.PAID\\n        ) revert CrowdFund__Ended();\\n\\n        if (block.timestamp >= campaign.deadline) revert CrowdFund__Deadline();\\n\\n        campaign.status = CampaignStatus.REVERTED;\\n\\n        _refund(_id);\\n\\n        emit RefundCampaign(_id, campaign.owner);\\n    }\\n\\n    function updateCampaign(\\n        uint _id,\\n        uint _newTarget,\\n        uint _newDeadline\\n    ) external onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.status != CampaignStatus.REVERTED)\\n            revert CrowdFund__Required();\\n\\n        campaign.target = _newTarget;\\n        campaign.deadline = _newDeadline;\\n        campaign.status = CampaignStatus.OPEN;\\n\\n        emit UpdatedCampaign(_id, _newTarget, _newDeadline);\\n    }\\n\\n    function setFee(uint _fee) external onlyOwner {\\n        i_feePercent = _fee;\\n    }\\n\\n    function withdrawFromContract() external onlyOwner {\\n        payable(i_owner).transfer(address(this).balance);\\n    }\\n\\n    function getDonators(\\n        uint256 _id\\n    ) external view returns (address[] memory, uint256[] memory) {\\n        return (s_campaigns[_id].donators, s_campaigns[_id].donations);\\n    }\\n\\n    function getCampaigns() external view returns (Campaign[] memory) {\\n        Campaign[] memory allCampaigns = new Campaign[](s_numberOfCampaigns);\\n\\n        for (uint i = 0; i < s_numberOfCampaigns; i++) {\\n            Campaign storage item = s_campaigns[i];\\n\\n            allCampaigns[i] = item;\\n        }\\n        return allCampaigns;\\n    }\\n\\n    function getCampaign(uint _id) external view returns (Campaign memory) {\\n        return s_campaigns[_id];\\n    }\\n\\n    function getFeeAccount() external view returns (address) {\\n        return i_feeAccount;\\n    }\\n\\n    function getFeePercent() external view returns (uint) {\\n        return i_feePercent;\\n    }\\n\\n    function getPriceFeed() external view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getStatus(\\n        uint _id\\n    ) external view returns (CampaignStatus _status) {\\n        return _status = s_campaigns[_id].status;\\n    }\\n\\n    function getBalance(uint _id) external view returns (uint) {\\n        return s_campaigns[_id].owner.balance;\\n    }\\n\\n    function getContractBalance() external view returns (uint) {\\n        return i_feeAccount.balance;\\n    }\\n\\n    function getRefundStatus(uint _id) external view returns (bool) {\\n        Campaign memory campaign = s_campaigns[_id];\\n\\n        return campaign.refunded;\\n    }\\n\\n    function getRemainingTime(uint256 _id) external view returns (uint) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        uint remainingTime = 0;\\n\\n        if (block.timestamp < campaign.deadline) {\\n            remainingTime = campaign.deadline - block.timestamp;\\n        } else {\\n            remainingTime = 0;\\n        }\\n        return remainingTime;\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata\\n    )\\n        external\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory performData)\\n    {\\n        upkeepNeeded = isUpdateCampaignStatusNeeded();\\n        performData = \\\"\\\";\\n    }\\n\\n    function performUpkeep(bytes memory performData) external override {\\n        updateCampaignStatus();\\n    }\\n\\n    function isUpdateCampaignStatusNeeded() internal view returns (bool) {\\n        Campaign storage campaign = s_campaigns[s_numberOfCampaigns];\\n        if (block.timestamp >= campaign.deadline) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function updateCampaignStatus() internal onlyOwner {\\n        for (uint i = 0; i < s_numberOfCampaigns; i++) {\\n            Campaign storage campaign = s_campaigns[i];\\n            if (campaign.status == CampaignStatus.OPEN) {\\n                campaign.status = CampaignStatus.REVERTED;\\n                emit UpdatedCampaign(i, campaign.target, campaign.deadline);\\n            }\\n        }\\n    }\\n\\n    // for contract owner only to set the campaign status\\n    function setCampaignStatus(\\n        uint256 _id,\\n        CampaignStatus _status\\n    ) internal onlyOwner {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        campaign.status = _status;\\n    }\\n\\n    function _refund(uint _id) internal {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status != CampaignStatus.DELETED &&\\n            campaign.status != CampaignStatus.REVERTED\\n        ) revert CrowdFund__Required();\\n\\n        // Calculate total amount to refund\\n        for (uint i = 0; i < campaign.donations.length; i++) {\\n            _payTo(campaign.donators[i], campaign.donations[i]);\\n        }\\n\\n        campaign.refunded = true;\\n    }\\n\\n    function _payTo(address _to, uint _amount) internal {\\n        (bool success, ) = payable(_to).call{value: _amount}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function _payOut(uint _id) internal {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.status != CampaignStatus.PAID)\\n            revert CrowdFund__Required();\\n\\n        uint totalAmount = campaign.amountCollected;\\n        uint fee = (totalAmount * i_feePercent) / 100;\\n        uint netAmount = totalAmount - fee;\\n\\n        _payTo(campaign.owner, netAmount);\\n        _payTo(i_feeAccount, fee);\\n\\n        emit PaidOutCampaign(_id, msg.sender, netAmount, block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0xf981e5f8994ab6bb8660391d2d7050346154038a42a9dd9708e5613fc2e9c91f\",\"license\":\"MIT\"},\"library/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x27b2650fdca0b76c8cdadccc26163427e32d3af052b78ee431d4d146d9366a8e\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "performUpkeep(bytes)": {
        "details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "performUpkeep(bytes)": {
        "notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 89,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "i_feePercent",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 91,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "i_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 94,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "campaignStatus",
        "offset": 20,
        "slot": "1",
        "type": "t_enum(CampaignStatus)106"
      },
      {
        "astId": 97,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 100,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_numberOfCampaigns",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 271,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Campaign)143_storage)"
      },
      {
        "astId": 275,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_campaignExist",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_enum(CampaignStatus)106": {
        "encoding": "inplace",
        "label": "enum CrowdFund.CampaignStatus",
        "numberOfBytes": "1"
      },
      "t_enum(Category)112": {
        "encoding": "inplace",
        "label": "enum CrowdFund.Category",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Campaign)143_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CrowdFund.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)143_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)143_storage": {
        "encoding": "inplace",
        "label": "struct CrowdFund.Campaign",
        "members": [
          {
            "astId": 114,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 116,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 118,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 120,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 122,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "target",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 124,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "deadline",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 126,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "amountCollected",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "image",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 131,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "donators",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 134,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "donations",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 137,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "status",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(CampaignStatus)106"
          },
          {
            "astId": 140,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "category",
            "offset": 1,
            "slot": "10",
            "type": "t_enum(Category)112"
          },
          {
            "astId": 142,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "refunded",
            "offset": 2,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}