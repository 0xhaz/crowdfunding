{
  "address": "0x1603631D1483d530b03488BA9076605c2B60Db9B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "priceFeeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Deadline",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Ended",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CrowdFund__Required",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CancelCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum CrowdFund.Category",
          "name": "category",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "CreatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DonatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "donations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "PaidOutCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "RefundCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTarget",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDeadline",
          "type": "uint256"
        }
      ],
      "name": "UpdatedCampaign",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "WithdrawCampaign",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authorizedExecutor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "cancelCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CrowdFund.Category",
          "name": "_category",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        }
      ],
      "name": "createCampaign",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "donateToCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "donators",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "donations",
              "type": "uint256[]"
            },
            {
              "internalType": "enum CrowdFund.CampaignStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "enum CrowdFund.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "refunded",
              "type": "bool"
            }
          ],
          "internalType": "struct CrowdFund.Campaign",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCampaigns",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "target",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountCollected",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "image",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "donators",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "donations",
              "type": "uint256[]"
            },
            {
              "internalType": "enum CrowdFund.CampaignStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "enum CrowdFund.Category",
              "name": "category",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "refunded",
              "type": "bool"
            }
          ],
          "internalType": "struct CrowdFund.Campaign[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getDonators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRefundStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getRemainingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getStatus",
      "outputs": [
        {
          "internalType": "enum CrowdFund.CampaignStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "refundCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_campaignExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_numberOfCampaigns",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "name": "setAuthorizedExecutor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "enum CrowdFund.CampaignStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "setCampaignStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newTarget",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawCampaign",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFromContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb687b89757dfb66f32ca6bcee1e17e9e44e41c61b7b892900d20a07585bb6f07",
  "receipt": {
    "to": null,
    "from": "0x0E128580d848fB51849ab6564467A9BA79B4820c",
    "contractAddress": "0x1603631D1483d530b03488BA9076605c2B60Db9B",
    "transactionIndex": 52,
    "gasUsed": "3827128",
    "logsBloom": "0x
    "blockHash": "0x3c6070a7ffdcff8de095f2df8892ea0f6e9e0fe2765f94ed1d11ba67ee7754b2",
    "transactionHash": "0xb687b89757dfb66f32ca6bcee1e17e9e44e41c61b7b892900d20a07585bb6f07",
    "logs": [],
    "blockNumber": 9112378,
    "cumulativeGasUsed": "25452728",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0E128580d848fB51849ab6564467A9BA79B4820c",
    10,
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 18,
  "solcInputHash": "bcc99f93563274f405211a0d3a922f98",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"priceFeeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CrowdFund__Deadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__Ended\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CrowdFund__Required\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CancelCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"CreatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DonatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"donations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PaidOutCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"RefundCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTarget\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDeadline\",\"type\":\"uint256\"}],\"name\":\"UpdatedCampaign\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"WithdrawCampaign\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authorizedExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"cancelCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"_category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"donateToCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"internalType\":\"struct CrowdFund.Campaign\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaigns\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCollected\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"enum CrowdFund.Category\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"refunded\",\"type\":\"bool\"}],\"internalType\":\"struct CrowdFund.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getDonators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRefundStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"refundCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_campaignExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_numberOfCampaigns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"name\":\"setAuthorizedExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"enum CrowdFund.CampaignStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"setCampaignStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newTarget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawCampaign\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFromContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFund.sol\":\"CrowdFund\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatibleInterface directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xac76a31c20c6d66196247376d113a0f19229569ab8c123989649d50be3333e0a\",\"license\":\"MIT\"},\"contracts/CrowdFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\nimport \\\"../library/PriceConverter.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\nerror CrowdFund__Deadline();\\nerror CrowdFund__NotOwner();\\nerror CrowdFund__Claimed();\\nerror CrowdFund__Ended();\\nerror CrowdFund__Required();\\n\\ncontract CrowdFund is KeeperCompatibleInterface {\\n    address private immutable i_feeAccount;\\n    address public authorizedExecutor;\\n    uint256 private i_feePercent;\\n    address private i_owner;\\n    CampaignStatus private campaignStatus;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    uint256 public s_numberOfCampaigns = 0;\\n\\n    enum CampaignStatus {\\n        OPEN,\\n        APPROVED,\\n        REVERTED,\\n        DELETED,\\n        PAID\\n    }\\n\\n    enum Category {\\n        CHARITY,\\n        TECH,\\n        WEB3,\\n        GAMES,\\n        EDUCATION\\n    }\\n\\n    struct Campaign {\\n        uint256 id;\\n        address owner;\\n        string title;\\n        string description;\\n        uint256 target;\\n        uint256 deadline;\\n        uint256 amountCollected;\\n        string image;\\n        address[] donators;\\n        uint256[] donations;\\n        CampaignStatus status;\\n        Category category;\\n        bool refunded;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert CrowdFund__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlyAuthorizedExecutor() {\\n        if (msg.sender != authorizedExecutor || msg.sender != i_owner)\\n            revert CrowdFund__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlyCampaignOwner(uint256 _id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (campaign.owner != msg.sender) revert CrowdFund__NotOwner();\\n        _;\\n    }\\n\\n    modifier onlyOpenCampaign(uint _id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (campaign.status != CampaignStatus.OPEN)\\n            revert CrowdFund__Required();\\n        _;\\n    }\\n\\n    event CreatedCampaign(\\n        uint256 id,\\n        address indexed creator,\\n        Category category,\\n        uint256 target,\\n        uint256 deadline\\n    );\\n\\n    event CancelCampaign(uint256 id, address indexed creator, uint timestamp);\\n\\n    event DonatedCampaign(\\n        uint256 id,\\n        address indexed donator,\\n        uint value,\\n        uint timestamp\\n    );\\n\\n    event PaidOutCampaign(\\n        uint256 id,\\n        address indexed creator,\\n        uint256 donations,\\n        uint256 timestamp\\n    );\\n\\n    event WithdrawCampaign(uint id, address indexed creator);\\n\\n    event RefundCampaign(uint id, address indexed creator);\\n\\n    event UpdatedCampaign(uint256 id, uint256 newTarget, uint256 newDeadline);\\n\\n    mapping(uint256 => Campaign) private s_campaigns;\\n    mapping(uint256 => bool) public s_campaignExist;\\n\\n    constructor(\\n        address _feeAccount,\\n        uint256 _feePercent,\\n        address priceFeeAddress\\n    ) {\\n        i_feeAccount = _feeAccount;\\n        i_feePercent = _feePercent;\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeeAddress);\\n    }\\n\\n    function createCampaign(\\n        Category _category,\\n        string memory _title,\\n        string memory _description,\\n        uint256 _target,\\n        uint256 _deadline,\\n        string memory _image\\n    ) external returns (uint256) {\\n        if (_target < 0 ether) revert CrowdFund__Required();\\n        if (_deadline <= block.timestamp) revert CrowdFund__Required();\\n\\n        Campaign storage campaign = s_campaigns[s_numberOfCampaigns];\\n\\n        campaign.id = s_numberOfCampaigns;\\n        campaign.owner = msg.sender;\\n        campaign.title = _title;\\n        campaign.description = _description;\\n        campaign.target = _target;\\n        campaign.deadline = _deadline;\\n        campaign.amountCollected = 0;\\n        campaign.image = _image;\\n        campaign.donators = new address[](0);\\n        campaign.donations = new uint256[](0);\\n        campaign.category = _category;\\n\\n        campaign.status = CampaignStatus.OPEN;\\n\\n        s_campaignExist[campaign.id] = true;\\n\\n        s_numberOfCampaigns++;\\n\\n        emit CreatedCampaign(\\n            s_numberOfCampaigns,\\n            msg.sender,\\n            _category,\\n            _target,\\n            _deadline\\n        );\\n\\n        return s_numberOfCampaigns - 1;\\n    }\\n\\n    function donateToCampaign(\\n        uint256 _id\\n    ) external payable onlyOpenCampaign(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        uint amount = msg.value;\\n\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        campaign.donators.push(msg.sender);\\n        campaign.donations.push(amount);\\n        campaign.amountCollected += amount;\\n\\n        emit DonatedCampaign(_id, msg.sender, amount, block.timestamp);\\n\\n        if (campaign.amountCollected >= campaign.target) {\\n            campaign.status = CampaignStatus.APPROVED;\\n        } else {\\n            campaign.status = CampaignStatus.OPEN;\\n        }\\n    }\\n\\n    function cancelCampaign(\\n        uint256 _id\\n    ) external onlyCampaignOwner(_id) onlyOpenCampaign(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.owner != msg.sender) revert CrowdFund__NotOwner();\\n\\n        campaign.status = CampaignStatus.DELETED;\\n\\n        if (campaign.amountCollected > 0) {\\n            _refund(_id);\\n        }\\n\\n        emit CancelCampaign(_id, msg.sender, block.timestamp);\\n    }\\n\\n    function withdrawCampaign(\\n        uint256 _id\\n    ) external payable onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status != CampaignStatus.APPROVED &&\\n            campaign.status != CampaignStatus.REVERTED\\n        ) revert CrowdFund__Required();\\n\\n        if (msg.sender != campaign.owner) revert CrowdFund__NotOwner();\\n\\n        campaign.status = CampaignStatus.PAID;\\n\\n        _payOut(_id);\\n\\n        emit WithdrawCampaign(_id, msg.sender);\\n    }\\n\\n    function refundCampaign(uint _id) external onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status == CampaignStatus.REVERTED ||\\n            campaign.status == CampaignStatus.DELETED ||\\n            campaign.status == CampaignStatus.PAID\\n        ) revert CrowdFund__Ended();\\n\\n        if (block.timestamp >= campaign.deadline) revert CrowdFund__Deadline();\\n\\n        campaign.status = CampaignStatus.REVERTED;\\n\\n        _refund(_id);\\n\\n        emit RefundCampaign(_id, campaign.owner);\\n    }\\n\\n    function updateCampaign(\\n        uint _id,\\n        uint _newTarget,\\n        uint _newDeadline\\n    ) external onlyCampaignOwner(_id) {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.status != CampaignStatus.REVERTED)\\n            revert CrowdFund__Required();\\n\\n        campaign.target = _newTarget;\\n        campaign.deadline = _newDeadline;\\n        campaign.status = CampaignStatus.OPEN;\\n\\n        emit UpdatedCampaign(_id, _newTarget, _newDeadline);\\n    }\\n\\n    function setFee(uint _fee) external onlyOwner {\\n        i_feePercent = _fee;\\n    }\\n\\n    function setAuthorizedExecutor(address _executor) external onlyOwner {\\n        authorizedExecutor = _executor;\\n    }\\n\\n    function withdrawFromContract() external onlyOwner {\\n        payable(i_owner).transfer(address(this).balance);\\n    }\\n\\n    function getDonators(\\n        uint256 _id\\n    ) external view returns (address[] memory, uint256[] memory) {\\n        return (s_campaigns[_id].donators, s_campaigns[_id].donations);\\n    }\\n\\n    function getCampaigns() external view returns (Campaign[] memory) {\\n        Campaign[] memory allCampaigns = new Campaign[](s_numberOfCampaigns);\\n\\n        for (uint i = 0; i < s_numberOfCampaigns; i++) {\\n            Campaign storage item = s_campaigns[i];\\n\\n            allCampaigns[i] = item;\\n        }\\n        return allCampaigns;\\n    }\\n\\n    function getCampaign(uint _id) external view returns (Campaign memory) {\\n        return s_campaigns[_id];\\n    }\\n\\n    function getFeeAccount() external view returns (address) {\\n        return i_feeAccount;\\n    }\\n\\n    function getFeePercent() external view returns (uint) {\\n        return i_feePercent;\\n    }\\n\\n    function getPriceFeed() external view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getStatus(\\n        uint _id\\n    ) external view returns (CampaignStatus _status) {\\n        return _status = s_campaigns[_id].status;\\n    }\\n\\n    function getBalance(uint _id) external view returns (uint) {\\n        return s_campaigns[_id].owner.balance;\\n    }\\n\\n    function getContractBalance() external view returns (uint) {\\n        return i_feeAccount.balance;\\n    }\\n\\n    function getRefundStatus(uint _id) external view returns (bool) {\\n        Campaign memory campaign = s_campaigns[_id];\\n\\n        return campaign.refunded;\\n    }\\n\\n    function getRemainingTime(uint256 _id) external view returns (uint) {\\n        Campaign storage campaign = s_campaigns[_id];\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        uint remainingTime = 0;\\n\\n        if (block.timestamp < campaign.deadline) {\\n            remainingTime = campaign.deadline - block.timestamp;\\n        } else {\\n            remainingTime = 0;\\n        }\\n        return remainingTime;\\n    }\\n\\n    // for contract owner only to set the campaign status\\n    function setCampaignStatus(\\n        uint256 _id,\\n        CampaignStatus _status\\n    ) external onlyOwner {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (!s_campaignExist[_id]) revert CrowdFund__Required();\\n\\n        campaign.status = _status;\\n    }\\n\\n    function checkUpkeep(\\n        bytes calldata\\n    )\\n        external\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory performData)\\n    {\\n        upkeepNeeded = _isUpdateCampaignStatusNeeded();\\n        performData = \\\"\\\";\\n    }\\n\\n    function performUpkeep(bytes memory performData) external override {\\n        _updateCampaignStatus();\\n    }\\n\\n    function _isUpdateCampaignStatusNeeded() internal view returns (bool) {\\n        Campaign storage campaign = s_campaigns[s_numberOfCampaigns];\\n        if (block.timestamp >= campaign.deadline) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function _updateCampaignStatus() internal onlyAuthorizedExecutor {\\n        for (uint i = 0; i < s_numberOfCampaigns; i++) {\\n            Campaign storage campaign = s_campaigns[i];\\n            if (campaign.status == CampaignStatus.OPEN) {\\n                campaign.status = CampaignStatus.REVERTED;\\n                emit UpdatedCampaign(i, campaign.target, campaign.deadline);\\n            }\\n        }\\n    }\\n\\n    function _refund(uint _id) internal {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (\\n            campaign.status != CampaignStatus.DELETED &&\\n            campaign.status != CampaignStatus.REVERTED\\n        ) revert CrowdFund__Required();\\n\\n        // Calculate total amount to refund\\n        for (uint i = 0; i < campaign.donations.length; i++) {\\n            _payTo(campaign.donators[i], campaign.donations[i]);\\n        }\\n\\n        campaign.refunded = true;\\n    }\\n\\n    function _payTo(address _to, uint _amount) internal {\\n        (bool success, ) = payable(_to).call{value: _amount}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function _payOut(uint _id) internal {\\n        Campaign storage campaign = s_campaigns[_id];\\n\\n        if (campaign.status != CampaignStatus.PAID)\\n            revert CrowdFund__Required();\\n\\n        uint totalAmount = campaign.amountCollected;\\n        uint fee = (totalAmount * i_feePercent) / 100;\\n        uint netAmount = totalAmount - fee;\\n\\n        _payTo(campaign.owner, netAmount);\\n        _payTo(i_feeAccount, fee);\\n\\n        emit PaidOutCampaign(_id, msg.sender, netAmount, block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0x689fd781cf22cb7ce6d5c07a3277abec4113c4c04cb41dd9e526ad042bf7c9ce\",\"license\":\"MIT\"},\"library/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x27b2650fdca0b76c8cdadccc26163427e32d3af052b78ee431d4d146d9366a8e\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a060405260006004553480156200001657600080fd5b506040516200453c3803806200453c83398181016040528101906200003c9190620001a7565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160018190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000203565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001348262000107565b9050919050565b620001468162000127565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b6000819050919050565b62000181816200016c565b81146200018d57600080fd5b50565b600081519050620001a18162000176565b92915050565b600080600060608486031215620001c357620001c262000102565b5b6000620001d38682870162000155565b9350506020620001e68682870162000190565b9250506040620001f98682870162000155565b9150509250925092565b60805161430f6200022d600039600081816111550152818161172d0152612c2c015261430f6000f3fe6080604052600436106101815760003560e01c806369fe0e2d116100d1578063a78103221161008a578063d188c04911610064578063d188c049146105a2578063e681789d146105cb578063f487a65c146105f4578063f59a9bb01461061f57610181565b8063a781032214610511578063be74264d1461053a578063cad240e51461056557610181565b806369fe0e2d1461040d5780636e04ff0d146104365780636f9fb98a146104745780637684fc861461049f5780639e87a5cd146104bb578063a6b03633146104e657610181565b806342a4fda81161013e5780634614be9f116101185780634614be9f146103515780635598f8cc1461037c5780635c622a0e146103b95780635f589e42146103f657610181565b806342a4fda8146102e357806345598b4a146102ff5780634585e33b1461032857610181565b80630fa91fa914610186578063106b4871146101c457806313dd495b14610201578063181e01241461022c5780631e01043914610269578063359d2411146102a6575b600080fd5b34801561019257600080fd5b506101ad60048036038101906101a89190612f07565b610648565b6040516101bb9291906130e2565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190612f07565b61075a565b6040516101f89190613134565b60405180910390f35b34801561020d57600080fd5b50610216610b37565b604051610223919061315e565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190612f07565b610b5b565b6040516102609190613188565b60405180910390f35b34801561027557600080fd5b50610290600480360381019061028b9190612f07565b610bfe565b60405161029d9190613188565b60405180910390f35b3480156102b257600080fd5b506102cd60048036038101906102c89190612f07565b610c55565b6040516102da9190613134565b60405180910390f35b6102fd60048036038101906102f89190612f07565b610c75565b005b34801561030b57600080fd5b5061032660048036038101906103219190612f07565b610ee2565b005b34801561033457600080fd5b5061034f600480360381019061034a91906132e9565b611146565b005b34801561035d57600080fd5b50610366611151565b604051610373919061315e565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190612f07565b611179565b6040516103b09190613692565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190612f07565b611552565b6040516103ed91906136c3565b60405180910390f35b34801561040257600080fd5b5061040b61157f565b005b34801561041957600080fd5b50610434600480360381019061042f9190612f07565b611671565b005b34801561044257600080fd5b5061045d6004803603810190610458919061373e565b611702565b60405161046b9291906137e0565b60405180910390f35b34801561048057600080fd5b50610489611729565b6040516104969190613188565b60405180910390f35b6104b960048036038101906104b49190612f07565b611768565b005b3480156104c757600080fd5b506104d06119e6565b6040516104dd919061386f565b60405180910390f35b3480156104f257600080fd5b506104fb611a10565b6040516105089190613a81565b60405180910390f35b34801561051d57600080fd5b5061053860048036038101906105339190613aa3565b611e82565b005b34801561054657600080fd5b5061054f61202b565b60405161055c9190613188565b60405180910390f35b34801561057157600080fd5b5061058c60048036038101906105879190613bbc565b612035565b6040516105999190613188565b60405180910390f35b3480156105ae57600080fd5b506105c960048036038101906105c49190613cc9565b61233a565b005b3480156105d757600080fd5b506105f260048036038101906105ed9190613d1b565b612404565b005b34801561060057600080fd5b5061060961252a565b6040516106169190613188565b60405180910390f35b34801561062b57600080fd5b5061064660048036038101906106419190612f07565b612530565b005b6060806005600084815260200190815260200160002060080160056000858152602001908152602001600020600901818054806020026020016040519081016040528092919081815260200182805480156106f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ae575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561074a57602002820191906000526020600020905b815481526020019060010190808311610736575b5050505050905091509150915091565b60008060056000848152602001908152602001600020604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107ec90613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461081890613d8a565b80156108655780601f1061083a57610100808354040283529160200191610865565b820191906000526020600020905b81548152906001019060200180831161084857829003601f168201915b5050505050815260200160038201805461087e90613d8a565b80601f01602080910402602001604051908101604052809291908181526020018280546108aa90613d8a565b80156108f75780601f106108cc576101008083540402835291602001916108f7565b820191906000526020600020905b8154815290600101906020018083116108da57829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201805461092e90613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90613d8a565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015610a3557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109eb575b5050505050815260200160098201805480602002602001604051908101604052809291908181526020018280548015610a8d57602002820191906000526020600020905b815481526020019060010190808311610a79575b50505050508152602001600a820160009054906101000a900460ff166004811115610abb57610aba61348f565b5b6004811115610acd57610acc61348f565b5b8152602001600a820160019054906101000a900460ff166004811115610af657610af561348f565b5b6004811115610b0857610b0761348f565b5b8152602001600a820160029054906101000a900460ff1615151515815250509050806101800151915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806005600084815260200190815260200160002090506006600084815260200190815260200160002060009054906101000a900460ff16610bca576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160050154421015610bef57428260050154610be89190613dea565b9050610bf4565b600090505b8092505050919050565b60006005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b80600060056000838152602001908152602001600020905060006004811115610ca157610ca061348f565b5b81600a0160009054906101000a900460ff166004811115610cc557610cc461348f565b5b14610cfc576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000858152602001908152602001600020905060003490506006600086815260200190815260200160002060009054906101000a900460ff16610d6f576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600801339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160090181908060018154018082558091505060019003906000526020600020016000909190919091505580826006016000828254610e139190613e1e565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f655351f1bf449402dc56dbd84887de4bf8ee15fb1e442c4c68199b7fc5b6ad60868342604051610e6493929190613e52565b60405180910390a28160040154826006015410610ead57600182600a0160006101000a81548160ff02191690836004811115610ea357610ea261348f565b5b0217905550610edb565b600082600a0160006101000a81548160ff02191690836004811115610ed557610ed461348f565b5b02179055505b5050505050565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f83576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600060056000838152602001908152602001600020905060006004811115610faf57610fae61348f565b5b81600a0160009054906101000a900460ff166004811115610fd357610fd261348f565b5b1461100a576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600087815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110aa576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381600a0160006101000a81548160ff021916908360048111156110d2576110d161348f565b5b02179055506000816006015411156110ee576110ed866127c1565b5b3373ffffffffffffffffffffffffffffffffffffffff167fdaf42e53ca58d1d28d99e69c2f45565d7fbf704482f0641b81eeb42ef07462f38742604051611136929190613e89565b60405180910390a2505050505050565b61114e61293c565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b611181612d25565b60056000838152602001908152602001600020604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461121090613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461123c90613d8a565b80156112895780601f1061125e57610100808354040283529160200191611289565b820191906000526020600020905b81548152906001019060200180831161126c57829003601f168201915b505050505081526020016003820180546112a290613d8a565b80601f01602080910402602001604051908101604052809291908181526020018280546112ce90613d8a565b801561131b5780601f106112f05761010080835404028352916020019161131b565b820191906000526020600020905b8154815290600101906020018083116112fe57829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201805461135290613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461137e90613d8a565b80156113cb5780601f106113a0576101008083540402835291602001916113cb565b820191906000526020600020905b8154815290600101906020018083116113ae57829003601f168201915b505050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561145957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161140f575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156114b157602002820191906000526020600020905b81548152602001906001019080831161149d575b50505050508152602001600a820160009054906101000a900460ff1660048111156114df576114de61348f565b5b60048111156114f1576114f061348f565b5b8152602001600a820160019054906101000a900460ff16600481111561151a5761151961348f565b5b600481111561152c5761152b61348f565b5b8152602001600a820160029054906101000a900460ff1615151515815250509050919050565b600060056000838152602001908152602001600020600a0160009054906101000a900460ff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611606576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561166e573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116f8576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b6000606061170e612b05565b91506040518060200160405280600081525090509250929050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1631905090565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611809576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050600160048111156118345761183361348f565b5b81600a0160009054906101000a900460ff1660048111156118585761185761348f565b5b1415801561189c5750600260048111156118755761187461348f565b5b81600a0160009054906101000a900460ff1660048111156118995761189861348f565b5b14155b156118d3576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461195c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600481600a0160006101000a81548160ff021916908360048111156119845761198361348f565b5b021790555061199284612b3d565b3373ffffffffffffffffffffffffffffffffffffffff167fa00565430f3e0378018049de79b214a549b4193d49c14b535c3eef83581ebc51856040516119d89190613188565b60405180910390a250505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600060045467ffffffffffffffff811115611a3057611a2f6131be565b5b604051908082528060200260200182016040528015611a6957816020015b611a56612d25565b815260200190600190039081611a4e5790505b50905060005b600454811015611e7a57600060056000838152602001908152602001600020905080604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611b0d90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3990613d8a565b8015611b865780601f10611b5b57610100808354040283529160200191611b86565b820191906000526020600020905b815481529060010190602001808311611b6957829003601f168201915b50505050508152602001600382018054611b9f90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611bcb90613d8a565b8015611c185780601f10611bed57610100808354040283529160200191611c18565b820191906000526020600020905b815481529060010190602001808311611bfb57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152602001600782018054611c4f90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7b90613d8a565b8015611cc85780601f10611c9d57610100808354040283529160200191611cc8565b820191906000526020600020905b815481529060010190602001808311611cab57829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015611d5657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d0c575b5050505050815260200160098201805480602002602001604051908101604052809291908181526020018280548015611dae57602002820191906000526020600020905b815481526020019060010190808311611d9a575b50505050508152602001600a820160009054906101000a900460ff166004811115611ddc57611ddb61348f565b5b6004811115611dee57611ded61348f565b5b8152602001600a820160019054906101000a900460ff166004811115611e1757611e1661348f565b5b6004811115611e2957611e2861348f565b5b8152602001600a820160029054906101000a900460ff161515151581525050838381518110611e5b57611e5a613eb2565b5b6020026020010181905250508080611e7290613ee1565b915050611a6f565b508091505090565b8260006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f23576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000878152602001908152602001600020905060026004811115611f4e57611f4d61348f565b5b81600a0160009054906101000a900460ff166004811115611f7257611f7161348f565b5b14611fa9576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848160040181905550838160050181905550600081600a0160006101000a81548160ff02191690836004811115611fe357611fe261348f565b5b02179055507f5b0c82513cc7f1f8087a09ca71440f01a3e4bbc6c46495f1004842a1bc1dede086868660405161201b93929190613e52565b60405180910390a1505050505050565b6000600154905090565b600080841015612071576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4283116120aa576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000600454815260200190815260200160002090506004548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508681600201908161212291906140cb565b508581600301908161213491906140cb565b50848160040181905550838160050181905550600081600601819055508281600701908161216291906140cb565b50600067ffffffffffffffff81111561217e5761217d6131be565b5b6040519080825280602002602001820160405280156121ac5781602001602082028036833780820191505090505b508160080190805190602001906121c4929190612dc9565b50600067ffffffffffffffff8111156121e0576121df6131be565b5b60405190808252806020026020018201604052801561220e5781602001602082028036833780820191505090505b50816009019080519060200190612226929190612e53565b508781600a0160016101000a81548160ff0219169083600481111561224e5761224d61348f565b5b0217905550600081600a0160006101000a81548160ff0219169083600481111561227b5761227a61348f565b5b02179055506001600660008360000154815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008154809291906122c390613ee1565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f944e037155521668ebad86014260c643358e41123a5b998e18489a10ff11ea036004548a888860405161231694939291906141ac565b60405180910390a2600160045461232d9190613dea565b9150509695505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146123c1576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461248b576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600084815260200190815260200160002090506006600084815260200190815260200160002060009054906101000a900460ff166124f9576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181600a0160006101000a81548160ff021916908360048111156125205761251f61348f565b5b0217905550505050565b60045481565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125d1576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050600260048111156125fc576125fb61348f565b5b81600a0160009054906101000a900460ff1660048111156126205761261f61348f565b5b148061266157506003600481111561263b5761263a61348f565b5b81600a0160009054906101000a900460ff16600481111561265f5761265e61348f565b5b145b806126a0575060048081111561267a5761267961348f565b5b81600a0160009054906101000a900460ff16600481111561269e5761269d61348f565b5b145b156126d6576040517e4636d200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600501544210612713576040517f9bcfc26d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600281600a0160006101000a81548160ff0219169083600481111561273b5761273a61348f565b5b0217905550612749846127c1565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7499a145dac6baa4e55462de49ee33dd9526640a55399705c6eb4daebcd7f577856040516127b39190613188565b60405180910390a250505050565b6000600560008381526020019081526020016000209050600360048111156127ec576127eb61348f565b5b81600a0160009054906101000a900460ff1660048111156128105761280f61348f565b5b1415801561285457506002600481111561282d5761282c61348f565b5b81600a0160009054906101000a900460ff1660048111156128515761285061348f565b5b14155b1561288b576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b816009018054905081101561291a576129078260080182815481106128b6576128b5613eb2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360090183815481106128f7576128f6613eb2565b5b9060005260206000200154612caa565b808061291290613ee1565b91505061288e565b50600181600a0160026101000a81548160ff0219169083151502179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806129e55750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15612a1c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600454811015612b0257600060056000838152602001908152602001600020905060006004811115612a5457612a5361348f565b5b81600a0160009054906101000a900460ff166004811115612a7857612a7761348f565b5b03612aee57600281600a0160006101000a81548160ff02191690836004811115612aa557612aa461348f565b5b02179055507f5b0c82513cc7f1f8087a09ca71440f01a3e4bbc6c46495f1004842a1bc1dede08282600401548360050154604051612ae593929190613e52565b60405180910390a15b508080612afa90613ee1565b915050612a1f565b50565b600080600560006004548152602001908152602001600020905080600501544210612b34576001915050612b3a565b60009150505b90565b6000600560008381526020019081526020016000209050600480811115612b6757612b6661348f565b5b81600a0160009054906101000a900460ff166004811115612b8b57612b8a61348f565b5b14612bc2576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816006015490506000606460015483612bdd91906141f1565b612be79190614262565b905060008183612bf79190613dea565b9050612c278460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682612caa565b612c517f000000000000000000000000000000000000000000000000000000000000000083612caa565b3373ffffffffffffffffffffffffffffffffffffffff167f9a3866b92eb53bcee95d3202fbccf24673a278e8d2cad1f2acbc529703caf3e2868342604051612c9b93929190613e52565b60405180910390a25050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051612cd0906142c4565b60006040518083038185875af1925050503d8060008114612d0d576040519150601f19603f3d011682016040523d82523d6000602084013e612d12565b606091505b5050905080612d2057600080fd5b505050565b604051806101a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006004811115612da157612da061348f565b5b815260200160006004811115612dba57612db961348f565b5b81526020016000151581525090565b828054828255906000526020600020908101928215612e42579160200282015b82811115612e415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612de9565b5b509050612e4f9190612ea0565b5090565b828054828255906000526020600020908101928215612e8f579160200282015b82811115612e8e578251825591602001919060010190612e73565b5b509050612e9c9190612ea0565b5090565b5b80821115612eb9576000816000905550600101612ea1565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612ee481612ed1565b8114612eef57600080fd5b50565b600081359050612f0181612edb565b92915050565b600060208284031215612f1d57612f1c612ec7565b5b6000612f2b84828501612ef2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f8b82612f60565b9050919050565b612f9b81612f80565b82525050565b6000612fad8383612f92565b60208301905092915050565b6000602082019050919050565b6000612fd182612f34565b612fdb8185612f3f565b9350612fe683612f50565b8060005b83811015613017578151612ffe8882612fa1565b975061300983612fb9565b925050600181019050612fea565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61305981612ed1565b82525050565b600061306b8383613050565b60208301905092915050565b6000602082019050919050565b600061308f82613024565b613099818561302f565b93506130a483613040565b8060005b838110156130d55781516130bc888261305f565b97506130c783613077565b9250506001810190506130a8565b5085935050505092915050565b600060408201905081810360008301526130fc8185612fc6565b905081810360208301526131108184613084565b90509392505050565b60008115159050919050565b61312e81613119565b82525050565b60006020820190506131496000830184613125565b92915050565b61315881612f80565b82525050565b6000602082019050613173600083018461314f565b92915050565b61318281612ed1565b82525050565b600060208201905061319d6000830184613179565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131f6826131ad565b810181811067ffffffffffffffff82111715613215576132146131be565b5b80604052505050565b6000613228612ebd565b905061323482826131ed565b919050565b600067ffffffffffffffff821115613254576132536131be565b5b61325d826131ad565b9050602081019050919050565b82818337600083830152505050565b600061328c61328784613239565b61321e565b9050828152602081018484840111156132a8576132a76131a8565b5b6132b384828561326a565b509392505050565b600082601f8301126132d0576132cf6131a3565b5b81356132e0848260208601613279565b91505092915050565b6000602082840312156132ff576132fe612ec7565b5b600082013567ffffffffffffffff81111561331d5761331c612ecc565b5b613329848285016132bb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561336c578082015181840152602081019050613351565b60008484015250505050565b600061338382613332565b61338d818561333d565b935061339d81856020860161334e565b6133a6816131ad565b840191505092915050565b600082825260208201905092915050565b60006133cd82612f34565b6133d781856133b1565b93506133e283612f50565b8060005b838110156134135781516133fa8882612fa1565b975061340583612fb9565b9250506001810190506133e6565b5085935050505092915050565b600082825260208201905092915050565b600061343c82613024565b6134468185613420565b935061345183613040565b8060005b83811015613482578151613469888261305f565b975061347483613077565b925050600181019050613455565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106134cf576134ce61348f565b5b50565b60008190506134e0826134be565b919050565b60006134f0826134d2565b9050919050565b613500816134e5565b82525050565b600581106135175761351661348f565b5b50565b600081905061352882613506565b919050565b60006135388261351a565b9050919050565b6135488161352d565b82525050565b61355781613119565b82525050565b60006101a0830160008301516135766000860182613050565b5060208301516135896020860182612f92565b50604083015184820360408601526135a18282613378565b915050606083015184820360608601526135bb8282613378565b91505060808301516135d06080860182613050565b5060a08301516135e360a0860182613050565b5060c08301516135f660c0860182613050565b5060e083015184820360e086015261360e8282613378565b91505061010083015184820361010086015261362a82826133c2565b9150506101208301518482036101208601526136468282613431565b91505061014083015161365d6101408601826134f7565b5061016083015161367261016086018261353f565b5061018083015161368761018086018261354e565b508091505092915050565b600060208201905081810360008301526136ac818461355d565b905092915050565b6136bd816134e5565b82525050565b60006020820190506136d860008301846136b4565b92915050565b600080fd5b600080fd5b60008083601f8401126136fe576136fd6131a3565b5b8235905067ffffffffffffffff81111561371b5761371a6136de565b5b602083019150836001820283011115613737576137366136e3565b5b9250929050565b6000806020838503121561375557613754612ec7565b5b600083013567ffffffffffffffff81111561377357613772612ecc565b5b61377f858286016136e8565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60006137b28261378b565b6137bc8185613796565b93506137cc81856020860161334e565b6137d5816131ad565b840191505092915050565b60006040820190506137f56000830185613125565b818103602083015261380781846137a7565b90509392505050565b6000819050919050565b600061383561383061382b84612f60565b613810565b612f60565b9050919050565b60006138478261381a565b9050919050565b60006138598261383c565b9050919050565b6138698161384e565b82525050565b60006020820190506138846000830184613860565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101a0830160008301516138cf6000860182613050565b5060208301516138e26020860182612f92565b50604083015184820360408601526138fa8282613378565b915050606083015184820360608601526139148282613378565b91505060808301516139296080860182613050565b5060a083015161393c60a0860182613050565b5060c083015161394f60c0860182613050565b5060e083015184820360e08601526139678282613378565b91505061010083015184820361010086015261398382826133c2565b91505061012083015184820361012086015261399f8282613431565b9150506101408301516139b66101408601826134f7565b506101608301516139cb61016086018261353f565b506101808301516139e061018086018261354e565b508091505092915050565b60006139f783836138b6565b905092915050565b6000602082019050919050565b6000613a178261388a565b613a218185613895565b935083602082028501613a33856138a6565b8060005b85811015613a6f5784840389528151613a5085826139eb565b9450613a5b836139ff565b925060208a01995050600181019050613a37565b50829750879550505050505092915050565b60006020820190508181036000830152613a9b8184613a0c565b905092915050565b600080600060608486031215613abc57613abb612ec7565b5b6000613aca86828701612ef2565b9350506020613adb86828701612ef2565b9250506040613aec86828701612ef2565b9150509250925092565b60058110613b0357600080fd5b50565b600081359050613b1581613af6565b92915050565b600067ffffffffffffffff821115613b3657613b356131be565b5b613b3f826131ad565b9050602081019050919050565b6000613b5f613b5a84613b1b565b61321e565b905082815260208101848484011115613b7b57613b7a6131a8565b5b613b8684828561326a565b509392505050565b600082601f830112613ba357613ba26131a3565b5b8135613bb3848260208601613b4c565b91505092915050565b60008060008060008060c08789031215613bd957613bd8612ec7565b5b6000613be789828a01613b06565b965050602087013567ffffffffffffffff811115613c0857613c07612ecc565b5b613c1489828a01613b8e565b955050604087013567ffffffffffffffff811115613c3557613c34612ecc565b5b613c4189828a01613b8e565b9450506060613c5289828a01612ef2565b9350506080613c6389828a01612ef2565b92505060a087013567ffffffffffffffff811115613c8457613c83612ecc565b5b613c9089828a01613b8e565b9150509295509295509295565b613ca681612f80565b8114613cb157600080fd5b50565b600081359050613cc381613c9d565b92915050565b600060208284031215613cdf57613cde612ec7565b5b6000613ced84828501613cb4565b91505092915050565b60058110613d0357600080fd5b50565b600081359050613d1581613cf6565b92915050565b60008060408385031215613d3257613d31612ec7565b5b6000613d4085828601612ef2565b9250506020613d5185828601613d06565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613da257607f821691505b602082108103613db557613db4613d5b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613df582612ed1565b9150613e0083612ed1565b9250828203905081811115613e1857613e17613dbb565b5b92915050565b6000613e2982612ed1565b9150613e3483612ed1565b9250828201905080821115613e4c57613e4b613dbb565b5b92915050565b6000606082019050613e676000830186613179565b613e746020830185613179565b613e816040830184613179565b949350505050565b6000604082019050613e9e6000830185613179565b613eab6020830184613179565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613eec82612ed1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613f1e57613f1d613dbb565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f8b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613f4e565b613f958683613f4e565b95508019841693508086168417925050509392505050565b6000613fc8613fc3613fbe84612ed1565b613810565b612ed1565b9050919050565b6000819050919050565b613fe283613fad565b613ff6613fee82613fcf565b848454613f5b565b825550505050565b600090565b61400b613ffe565b614016818484613fd9565b505050565b5b8181101561403a5761402f600082614003565b60018101905061401c565b5050565b601f82111561407f5761405081613f29565b61405984613f3e565b81016020851015614068578190505b61407c61407485613f3e565b83018261401b565b50505b505050565b600082821c905092915050565b60006140a260001984600802614084565b1980831691505092915050565b60006140bb8383614091565b9150826002028217905092915050565b6140d482613332565b67ffffffffffffffff8111156140ed576140ec6131be565b5b6140f78254613d8a565b61410282828561403e565b600060209050601f8311600181146141355760008415614123578287015190505b61412d85826140af565b865550614195565b601f19841661414386613f29565b60005b8281101561416b57848901518255600182019150602085019450602081019050614146565b868310156141885784890151614184601f891682614091565b8355505b6001600288020188555050505b505050505050565b6141a68161352d565b82525050565b60006080820190506141c16000830187613179565b6141ce602083018661419d565b6141db6040830185613179565b6141e86060830184613179565b95945050505050565b60006141fc82612ed1565b915061420783612ed1565b925082820261421581612ed1565b9150828204841483151761422c5761422b613dbb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061426d82612ed1565b915061427883612ed1565b92508261428857614287614233565b5b828204905092915050565b600081905092915050565b50565b60006142ae600083614293565b91506142b98261429e565b600082019050919050565b60006142cf826142a1565b915081905091905056fea26469706673582212202f18be53130ad070d98803cb41836ed3b87fde42c08783eb3ecf769b3b61263164736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c806369fe0e2d116100d1578063a78103221161008a578063d188c04911610064578063d188c049146105a2578063e681789d146105cb578063f487a65c146105f4578063f59a9bb01461061f57610181565b8063a781032214610511578063be74264d1461053a578063cad240e51461056557610181565b806369fe0e2d1461040d5780636e04ff0d146104365780636f9fb98a146104745780637684fc861461049f5780639e87a5cd146104bb578063a6b03633146104e657610181565b806342a4fda81161013e5780634614be9f116101185780634614be9f146103515780635598f8cc1461037c5780635c622a0e146103b95780635f589e42146103f657610181565b806342a4fda8146102e357806345598b4a146102ff5780634585e33b1461032857610181565b80630fa91fa914610186578063106b4871146101c457806313dd495b14610201578063181e01241461022c5780631e01043914610269578063359d2411146102a6575b600080fd5b34801561019257600080fd5b506101ad60048036038101906101a89190612f07565b610648565b6040516101bb9291906130e2565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190612f07565b61075a565b6040516101f89190613134565b60405180910390f35b34801561020d57600080fd5b50610216610b37565b604051610223919061315e565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190612f07565b610b5b565b6040516102609190613188565b60405180910390f35b34801561027557600080fd5b50610290600480360381019061028b9190612f07565b610bfe565b60405161029d9190613188565b60405180910390f35b3480156102b257600080fd5b506102cd60048036038101906102c89190612f07565b610c55565b6040516102da9190613134565b60405180910390f35b6102fd60048036038101906102f89190612f07565b610c75565b005b34801561030b57600080fd5b5061032660048036038101906103219190612f07565b610ee2565b005b34801561033457600080fd5b5061034f600480360381019061034a91906132e9565b611146565b005b34801561035d57600080fd5b50610366611151565b604051610373919061315e565b60405180910390f35b34801561038857600080fd5b506103a3600480360381019061039e9190612f07565b611179565b6040516103b09190613692565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190612f07565b611552565b6040516103ed91906136c3565b60405180910390f35b34801561040257600080fd5b5061040b61157f565b005b34801561041957600080fd5b50610434600480360381019061042f9190612f07565b611671565b005b34801561044257600080fd5b5061045d6004803603810190610458919061373e565b611702565b60405161046b9291906137e0565b60405180910390f35b34801561048057600080fd5b50610489611729565b6040516104969190613188565b60405180910390f35b6104b960048036038101906104b49190612f07565b611768565b005b3480156104c757600080fd5b506104d06119e6565b6040516104dd919061386f565b60405180910390f35b3480156104f257600080fd5b506104fb611a10565b6040516105089190613a81565b60405180910390f35b34801561051d57600080fd5b5061053860048036038101906105339190613aa3565b611e82565b005b34801561054657600080fd5b5061054f61202b565b60405161055c9190613188565b60405180910390f35b34801561057157600080fd5b5061058c60048036038101906105879190613bbc565b612035565b6040516105999190613188565b60405180910390f35b3480156105ae57600080fd5b506105c960048036038101906105c49190613cc9565b61233a565b005b3480156105d757600080fd5b506105f260048036038101906105ed9190613d1b565b612404565b005b34801561060057600080fd5b5061060961252a565b6040516106169190613188565b60405180910390f35b34801561062b57600080fd5b5061064660048036038101906106419190612f07565b612530565b005b6060806005600084815260200190815260200160002060080160056000858152602001908152602001600020600901818054806020026020016040519081016040528092919081815260200182805480156106f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ae575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561074a57602002820191906000526020600020905b815481526020019060010190808311610736575b5050505050905091509150915091565b60008060056000848152602001908152602001600020604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546107ec90613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461081890613d8a565b80156108655780601f1061083a57610100808354040283529160200191610865565b820191906000526020600020905b81548152906001019060200180831161084857829003601f168201915b5050505050815260200160038201805461087e90613d8a565b80601f01602080910402602001604051908101604052809291908181526020018280546108aa90613d8a565b80156108f75780601f106108cc576101008083540402835291602001916108f7565b820191906000526020600020905b8154815290600101906020018083116108da57829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201805461092e90613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461095a90613d8a565b80156109a75780601f1061097c576101008083540402835291602001916109a7565b820191906000526020600020905b81548152906001019060200180831161098a57829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015610a3557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109eb575b5050505050815260200160098201805480602002602001604051908101604052809291908181526020018280548015610a8d57602002820191906000526020600020905b815481526020019060010190808311610a79575b50505050508152602001600a820160009054906101000a900460ff166004811115610abb57610aba61348f565b5b6004811115610acd57610acc61348f565b5b8152602001600a820160019054906101000a900460ff166004811115610af657610af561348f565b5b6004811115610b0857610b0761348f565b5b8152602001600a820160029054906101000a900460ff1615151515815250509050806101800151915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806005600084815260200190815260200160002090506006600084815260200190815260200160002060009054906101000a900460ff16610bca576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160050154421015610bef57428260050154610be89190613dea565b9050610bf4565b600090505b8092505050919050565b60006005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16319050919050565b60066020528060005260406000206000915054906101000a900460ff1681565b80600060056000838152602001908152602001600020905060006004811115610ca157610ca061348f565b5b81600a0160009054906101000a900460ff166004811115610cc557610cc461348f565b5b14610cfc576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000858152602001908152602001600020905060003490506006600086815260200190815260200160002060009054906101000a900460ff16610d6f576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600801339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160090181908060018154018082558091505060019003906000526020600020016000909190919091505580826006016000828254610e139190613e1e565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f655351f1bf449402dc56dbd84887de4bf8ee15fb1e442c4c68199b7fc5b6ad60868342604051610e6493929190613e52565b60405180910390a28160040154826006015410610ead57600182600a0160006101000a81548160ff02191690836004811115610ea357610ea261348f565b5b0217905550610edb565b600082600a0160006101000a81548160ff02191690836004811115610ed557610ed461348f565b5b02179055505b5050505050565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f83576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600060056000838152602001908152602001600020905060006004811115610faf57610fae61348f565b5b81600a0160009054906101000a900460ff166004811115610fd357610fd261348f565b5b1461100a576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600087815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146110aa576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600381600a0160006101000a81548160ff021916908360048111156110d2576110d161348f565b5b02179055506000816006015411156110ee576110ed866127c1565b5b3373ffffffffffffffffffffffffffffffffffffffff167fdaf42e53ca58d1d28d99e69c2f45565d7fbf704482f0641b81eeb42ef07462f38742604051611136929190613e89565b60405180910390a2505050505050565b61114e61293c565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b611181612d25565b60056000838152602001908152602001600020604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461121090613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461123c90613d8a565b80156112895780601f1061125e57610100808354040283529160200191611289565b820191906000526020600020905b81548152906001019060200180831161126c57829003601f168201915b505050505081526020016003820180546112a290613d8a565b80601f01602080910402602001604051908101604052809291908181526020018280546112ce90613d8a565b801561131b5780601f106112f05761010080835404028352916020019161131b565b820191906000526020600020905b8154815290600101906020018083116112fe57829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201805461135290613d8a565b80601f016020809104026020016040519081016040528092919081815260200182805461137e90613d8a565b80156113cb5780601f106113a0576101008083540402835291602001916113cb565b820191906000526020600020905b8154815290600101906020018083116113ae57829003601f168201915b505050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561145957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161140f575b50505050508152602001600982018054806020026020016040519081016040528092919081815260200182805480156114b157602002820191906000526020600020905b81548152602001906001019080831161149d575b50505050508152602001600a820160009054906101000a900460ff1660048111156114df576114de61348f565b5b60048111156114f1576114f061348f565b5b8152602001600a820160019054906101000a900460ff16600481111561151a5761151961348f565b5b600481111561152c5761152b61348f565b5b8152602001600a820160029054906101000a900460ff1615151515815250509050919050565b600060056000838152602001908152602001600020600a0160009054906101000a900460ff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611606576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561166e573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116f8576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b6000606061170e612b05565b91506040518060200160405280600081525090509250929050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1631905090565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611809576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050600160048111156118345761183361348f565b5b81600a0160009054906101000a900460ff1660048111156118585761185761348f565b5b1415801561189c5750600260048111156118755761187461348f565b5b81600a0160009054906101000a900460ff1660048111156118995761189861348f565b5b14155b156118d3576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461195c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600481600a0160006101000a81548160ff021916908360048111156119845761198361348f565b5b021790555061199284612b3d565b3373ffffffffffffffffffffffffffffffffffffffff167fa00565430f3e0378018049de79b214a549b4193d49c14b535c3eef83581ebc51856040516119d89190613188565b60405180910390a250505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600060045467ffffffffffffffff811115611a3057611a2f6131be565b5b604051908082528060200260200182016040528015611a6957816020015b611a56612d25565b815260200190600190039081611a4e5790505b50905060005b600454811015611e7a57600060056000838152602001908152602001600020905080604051806101a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054611b0d90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3990613d8a565b8015611b865780601f10611b5b57610100808354040283529160200191611b86565b820191906000526020600020905b815481529060010190602001808311611b6957829003601f168201915b50505050508152602001600382018054611b9f90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611bcb90613d8a565b8015611c185780601f10611bed57610100808354040283529160200191611c18565b820191906000526020600020905b815481529060010190602001808311611bfb57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152602001600782018054611c4f90613d8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c7b90613d8a565b8015611cc85780601f10611c9d57610100808354040283529160200191611cc8565b820191906000526020600020905b815481529060010190602001808311611cab57829003601f168201915b5050505050815260200160088201805480602002602001604051908101604052809291908181526020018280548015611d5657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d0c575b5050505050815260200160098201805480602002602001604051908101604052809291908181526020018280548015611dae57602002820191906000526020600020905b815481526020019060010190808311611d9a575b50505050508152602001600a820160009054906101000a900460ff166004811115611ddc57611ddb61348f565b5b6004811115611dee57611ded61348f565b5b8152602001600a820160019054906101000a900460ff166004811115611e1757611e1661348f565b5b6004811115611e2957611e2861348f565b5b8152602001600a820160029054906101000a900460ff161515151581525050838381518110611e5b57611e5a613eb2565b5b6020026020010181905250508080611e7290613ee1565b915050611a6f565b508091505090565b8260006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f23576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000878152602001908152602001600020905060026004811115611f4e57611f4d61348f565b5b81600a0160009054906101000a900460ff166004811115611f7257611f7161348f565b5b14611fa9576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848160040181905550838160050181905550600081600a0160006101000a81548160ff02191690836004811115611fe357611fe261348f565b5b02179055507f5b0c82513cc7f1f8087a09ca71440f01a3e4bbc6c46495f1004842a1bc1dede086868660405161201b93929190613e52565b60405180910390a1505050505050565b6000600154905090565b600080841015612071576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b4283116120aa576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000600454815260200190815260200160002090506004548160000181905550338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508681600201908161212291906140cb565b508581600301908161213491906140cb565b50848160040181905550838160050181905550600081600601819055508281600701908161216291906140cb565b50600067ffffffffffffffff81111561217e5761217d6131be565b5b6040519080825280602002602001820160405280156121ac5781602001602082028036833780820191505090505b508160080190805190602001906121c4929190612dc9565b50600067ffffffffffffffff8111156121e0576121df6131be565b5b60405190808252806020026020018201604052801561220e5781602001602082028036833780820191505090505b50816009019080519060200190612226929190612e53565b508781600a0160016101000a81548160ff0219169083600481111561224e5761224d61348f565b5b0217905550600081600a0160006101000a81548160ff0219169083600481111561227b5761227a61348f565b5b02179055506001600660008360000154815260200190815260200160002060006101000a81548160ff021916908315150217905550600460008154809291906122c390613ee1565b91905055503373ffffffffffffffffffffffffffffffffffffffff167f944e037155521668ebad86014260c643358e41123a5b998e18489a10ff11ea036004548a888860405161231694939291906141ac565b60405180910390a2600160045461232d9190613dea565b9150509695505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146123c1576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461248b576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600084815260200190815260200160002090506006600084815260200190815260200160002060009054906101000a900460ff166124f9576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8181600a0160006101000a81548160ff021916908360048111156125205761251f61348f565b5b0217905550505050565b60045481565b8060006005600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146125d1576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050600260048111156125fc576125fb61348f565b5b81600a0160009054906101000a900460ff1660048111156126205761261f61348f565b5b148061266157506003600481111561263b5761263a61348f565b5b81600a0160009054906101000a900460ff16600481111561265f5761265e61348f565b5b145b806126a0575060048081111561267a5761267961348f565b5b81600a0160009054906101000a900460ff16600481111561269e5761269d61348f565b5b145b156126d6576040517e4636d200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600501544210612713576040517f9bcfc26d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600281600a0160006101000a81548160ff0219169083600481111561273b5761273a61348f565b5b0217905550612749846127c1565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7499a145dac6baa4e55462de49ee33dd9526640a55399705c6eb4daebcd7f577856040516127b39190613188565b60405180910390a250505050565b6000600560008381526020019081526020016000209050600360048111156127ec576127eb61348f565b5b81600a0160009054906101000a900460ff1660048111156128105761280f61348f565b5b1415801561285457506002600481111561282d5761282c61348f565b5b81600a0160009054906101000a900460ff1660048111156128515761285061348f565b5b14155b1561288b576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b816009018054905081101561291a576129078260080182815481106128b6576128b5613eb2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360090183815481106128f7576128f6613eb2565b5b9060005260206000200154612caa565b808061291290613ee1565b91505061288e565b50600181600a0160026101000a81548160ff0219169083151502179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806129e55750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15612a1c576040517ff864ae5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600454811015612b0257600060056000838152602001908152602001600020905060006004811115612a5457612a5361348f565b5b81600a0160009054906101000a900460ff166004811115612a7857612a7761348f565b5b03612aee57600281600a0160006101000a81548160ff02191690836004811115612aa557612aa461348f565b5b02179055507f5b0c82513cc7f1f8087a09ca71440f01a3e4bbc6c46495f1004842a1bc1dede08282600401548360050154604051612ae593929190613e52565b60405180910390a15b508080612afa90613ee1565b915050612a1f565b50565b600080600560006004548152602001908152602001600020905080600501544210612b34576001915050612b3a565b60009150505b90565b6000600560008381526020019081526020016000209050600480811115612b6757612b6661348f565b5b81600a0160009054906101000a900460ff166004811115612b8b57612b8a61348f565b5b14612bc2576040517fadafbc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816006015490506000606460015483612bdd91906141f1565b612be79190614262565b905060008183612bf79190613dea565b9050612c278460010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682612caa565b612c517f000000000000000000000000000000000000000000000000000000000000000083612caa565b3373ffffffffffffffffffffffffffffffffffffffff167f9a3866b92eb53bcee95d3202fbccf24673a278e8d2cad1f2acbc529703caf3e2868342604051612c9b93929190613e52565b60405180910390a25050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051612cd0906142c4565b60006040518083038185875af1925050503d8060008114612d0d576040519150601f19603f3d011682016040523d82523d6000602084013e612d12565b606091505b5050905080612d2057600080fd5b505050565b604051806101a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006004811115612da157612da061348f565b5b815260200160006004811115612dba57612db961348f565b5b81526020016000151581525090565b828054828255906000526020600020908101928215612e42579160200282015b82811115612e415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612de9565b5b509050612e4f9190612ea0565b5090565b828054828255906000526020600020908101928215612e8f579160200282015b82811115612e8e578251825591602001919060010190612e73565b5b509050612e9c9190612ea0565b5090565b5b80821115612eb9576000816000905550600101612ea1565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b612ee481612ed1565b8114612eef57600080fd5b50565b600081359050612f0181612edb565b92915050565b600060208284031215612f1d57612f1c612ec7565b5b6000612f2b84828501612ef2565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f8b82612f60565b9050919050565b612f9b81612f80565b82525050565b6000612fad8383612f92565b60208301905092915050565b6000602082019050919050565b6000612fd182612f34565b612fdb8185612f3f565b9350612fe683612f50565b8060005b83811015613017578151612ffe8882612fa1565b975061300983612fb9565b925050600181019050612fea565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61305981612ed1565b82525050565b600061306b8383613050565b60208301905092915050565b6000602082019050919050565b600061308f82613024565b613099818561302f565b93506130a483613040565b8060005b838110156130d55781516130bc888261305f565b97506130c783613077565b9250506001810190506130a8565b5085935050505092915050565b600060408201905081810360008301526130fc8185612fc6565b905081810360208301526131108184613084565b90509392505050565b60008115159050919050565b61312e81613119565b82525050565b60006020820190506131496000830184613125565b92915050565b61315881612f80565b82525050565b6000602082019050613173600083018461314f565b92915050565b61318281612ed1565b82525050565b600060208201905061319d6000830184613179565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6131f6826131ad565b810181811067ffffffffffffffff82111715613215576132146131be565b5b80604052505050565b6000613228612ebd565b905061323482826131ed565b919050565b600067ffffffffffffffff821115613254576132536131be565b5b61325d826131ad565b9050602081019050919050565b82818337600083830152505050565b600061328c61328784613239565b61321e565b9050828152602081018484840111156132a8576132a76131a8565b5b6132b384828561326a565b509392505050565b600082601f8301126132d0576132cf6131a3565b5b81356132e0848260208601613279565b91505092915050565b6000602082840312156132ff576132fe612ec7565b5b600082013567ffffffffffffffff81111561331d5761331c612ecc565b5b613329848285016132bb565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561336c578082015181840152602081019050613351565b60008484015250505050565b600061338382613332565b61338d818561333d565b935061339d81856020860161334e565b6133a6816131ad565b840191505092915050565b600082825260208201905092915050565b60006133cd82612f34565b6133d781856133b1565b93506133e283612f50565b8060005b838110156134135781516133fa8882612fa1565b975061340583612fb9565b9250506001810190506133e6565b5085935050505092915050565b600082825260208201905092915050565b600061343c82613024565b6134468185613420565b935061345183613040565b8060005b83811015613482578151613469888261305f565b975061347483613077565b925050600181019050613455565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106134cf576134ce61348f565b5b50565b60008190506134e0826134be565b919050565b60006134f0826134d2565b9050919050565b613500816134e5565b82525050565b600581106135175761351661348f565b5b50565b600081905061352882613506565b919050565b60006135388261351a565b9050919050565b6135488161352d565b82525050565b61355781613119565b82525050565b60006101a0830160008301516135766000860182613050565b5060208301516135896020860182612f92565b50604083015184820360408601526135a18282613378565b915050606083015184820360608601526135bb8282613378565b91505060808301516135d06080860182613050565b5060a08301516135e360a0860182613050565b5060c08301516135f660c0860182613050565b5060e083015184820360e086015261360e8282613378565b91505061010083015184820361010086015261362a82826133c2565b9150506101208301518482036101208601526136468282613431565b91505061014083015161365d6101408601826134f7565b5061016083015161367261016086018261353f565b5061018083015161368761018086018261354e565b508091505092915050565b600060208201905081810360008301526136ac818461355d565b905092915050565b6136bd816134e5565b82525050565b60006020820190506136d860008301846136b4565b92915050565b600080fd5b600080fd5b60008083601f8401126136fe576136fd6131a3565b5b8235905067ffffffffffffffff81111561371b5761371a6136de565b5b602083019150836001820283011115613737576137366136e3565b5b9250929050565b6000806020838503121561375557613754612ec7565b5b600083013567ffffffffffffffff81111561377357613772612ecc565b5b61377f858286016136e8565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60006137b28261378b565b6137bc8185613796565b93506137cc81856020860161334e565b6137d5816131ad565b840191505092915050565b60006040820190506137f56000830185613125565b818103602083015261380781846137a7565b90509392505050565b6000819050919050565b600061383561383061382b84612f60565b613810565b612f60565b9050919050565b60006138478261381a565b9050919050565b60006138598261383c565b9050919050565b6138698161384e565b82525050565b60006020820190506138846000830184613860565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006101a0830160008301516138cf6000860182613050565b5060208301516138e26020860182612f92565b50604083015184820360408601526138fa8282613378565b915050606083015184820360608601526139148282613378565b91505060808301516139296080860182613050565b5060a083015161393c60a0860182613050565b5060c083015161394f60c0860182613050565b5060e083015184820360e08601526139678282613378565b91505061010083015184820361010086015261398382826133c2565b91505061012083015184820361012086015261399f8282613431565b9150506101408301516139b66101408601826134f7565b506101608301516139cb61016086018261353f565b506101808301516139e061018086018261354e565b508091505092915050565b60006139f783836138b6565b905092915050565b6000602082019050919050565b6000613a178261388a565b613a218185613895565b935083602082028501613a33856138a6565b8060005b85811015613a6f5784840389528151613a5085826139eb565b9450613a5b836139ff565b925060208a01995050600181019050613a37565b50829750879550505050505092915050565b60006020820190508181036000830152613a9b8184613a0c565b905092915050565b600080600060608486031215613abc57613abb612ec7565b5b6000613aca86828701612ef2565b9350506020613adb86828701612ef2565b9250506040613aec86828701612ef2565b9150509250925092565b60058110613b0357600080fd5b50565b600081359050613b1581613af6565b92915050565b600067ffffffffffffffff821115613b3657613b356131be565b5b613b3f826131ad565b9050602081019050919050565b6000613b5f613b5a84613b1b565b61321e565b905082815260208101848484011115613b7b57613b7a6131a8565b5b613b8684828561326a565b509392505050565b600082601f830112613ba357613ba26131a3565b5b8135613bb3848260208601613b4c565b91505092915050565b60008060008060008060c08789031215613bd957613bd8612ec7565b5b6000613be789828a01613b06565b965050602087013567ffffffffffffffff811115613c0857613c07612ecc565b5b613c1489828a01613b8e565b955050604087013567ffffffffffffffff811115613c3557613c34612ecc565b5b613c4189828a01613b8e565b9450506060613c5289828a01612ef2565b9350506080613c6389828a01612ef2565b92505060a087013567ffffffffffffffff811115613c8457613c83612ecc565b5b613c9089828a01613b8e565b9150509295509295509295565b613ca681612f80565b8114613cb157600080fd5b50565b600081359050613cc381613c9d565b92915050565b600060208284031215613cdf57613cde612ec7565b5b6000613ced84828501613cb4565b91505092915050565b60058110613d0357600080fd5b50565b600081359050613d1581613cf6565b92915050565b60008060408385031215613d3257613d31612ec7565b5b6000613d4085828601612ef2565b9250506020613d5185828601613d06565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613da257607f821691505b602082108103613db557613db4613d5b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613df582612ed1565b9150613e0083612ed1565b9250828203905081811115613e1857613e17613dbb565b5b92915050565b6000613e2982612ed1565b9150613e3483612ed1565b9250828201905080821115613e4c57613e4b613dbb565b5b92915050565b6000606082019050613e676000830186613179565b613e746020830185613179565b613e816040830184613179565b949350505050565b6000604082019050613e9e6000830185613179565b613eab6020830184613179565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000613eec82612ed1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613f1e57613f1d613dbb565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613f8b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613f4e565b613f958683613f4e565b95508019841693508086168417925050509392505050565b6000613fc8613fc3613fbe84612ed1565b613810565b612ed1565b9050919050565b6000819050919050565b613fe283613fad565b613ff6613fee82613fcf565b848454613f5b565b825550505050565b600090565b61400b613ffe565b614016818484613fd9565b505050565b5b8181101561403a5761402f600082614003565b60018101905061401c565b5050565b601f82111561407f5761405081613f29565b61405984613f3e565b81016020851015614068578190505b61407c61407485613f3e565b83018261401b565b50505b505050565b600082821c905092915050565b60006140a260001984600802614084565b1980831691505092915050565b60006140bb8383614091565b9150826002028217905092915050565b6140d482613332565b67ffffffffffffffff8111156140ed576140ec6131be565b5b6140f78254613d8a565b61410282828561403e565b600060209050601f8311600181146141355760008415614123578287015190505b61412d85826140af565b865550614195565b601f19841661414386613f29565b60005b8281101561416b57848901518255600182019150602085019450602081019050614146565b868310156141885784890151614184601f891682614091565b8355505b6001600288020188555050505b505050505050565b6141a68161352d565b82525050565b60006080820190506141c16000830187613179565b6141ce602083018661419d565b6141db6040830185613179565b6141e86060830184613179565b95945050505050565b60006141fc82612ed1565b915061420783612ed1565b925082820261421581612ed1565b9150828204841483151761422c5761422b613dbb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061426d82612ed1565b915061427883612ed1565b92508261428857614287614233565b5b828204905092915050565b600081905092915050565b50565b60006142ae600083614293565b91506142b98261429e565b600082019050919050565b60006142cf826142a1565b915081905091905056fea26469706673582212202f18be53130ad070d98803cb41836ed3b87fde42c08783eb3ecf769b3b61263164736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "performUpkeep(bytes)": {
        "details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
        "params": {
          "performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "performUpkeep(bytes)": {
        "notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 89,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "authorizedExecutor",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 91,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "i_feePercent",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 93,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 96,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "campaignStatus",
        "offset": 20,
        "slot": "2",
        "type": "t_enum(CampaignStatus)108"
      },
      {
        "astId": 99,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 102,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_numberOfCampaigns",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 284,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_campaigns",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Campaign)145_storage)"
      },
      {
        "astId": 288,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "s_campaignExist",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_enum(CampaignStatus)108": {
        "encoding": "inplace",
        "label": "enum CrowdFund.CampaignStatus",
        "numberOfBytes": "1"
      },
      "t_enum(Category)114": {
        "encoding": "inplace",
        "label": "enum CrowdFund.Category",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Campaign)145_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CrowdFund.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)145_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)145_storage": {
        "encoding": "inplace",
        "label": "struct CrowdFund.Campaign",
        "members": [
          {
            "astId": 116,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 118,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 120,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 122,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 124,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "target",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 126,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "deadline",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "amountCollected",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 130,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "image",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 133,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "donators",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 136,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "donations",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 139,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "status",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(CampaignStatus)108"
          },
          {
            "astId": 142,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "category",
            "offset": 1,
            "slot": "10",
            "type": "t_enum(Category)114"
          },
          {
            "astId": 144,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "refunded",
            "offset": 2,
            "slot": "10",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}